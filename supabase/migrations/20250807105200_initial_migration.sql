create table "public"."audit_logs" (
    "id" text not null,
    "user_id" text,
    "action_type" text,
    "resource_type" text,
    "resource_id" text,
    "details" jsonb,
    "ip_address" text,
    "user_agent" text,
    "created_at" timestamp with time zone
);


alter table "public"."audit_logs" enable row level security;

create table "public"."field_configurations" (
    "id" text not null,
    "user_id" text,
    "field_name" text,
    "is_editable" boolean,
    "is_dangerous" boolean,
    "field_type" text,
    "display_name" text,
    "validation_rules" text,
    "created_at" timestamp with time zone
);


alter table "public"."field_configurations" enable row level security;

create table "public"."hubspot_page_backups" (
    "id" bigint generated by default as identity not null,
    "user_id" uuid not null,
    "version_id" text,
    "hubspot_page_id" text,
    "page_type" text,
    "name" text,
    "url" text,
    "html_title" text,
    "meta_description" text,
    "slug" text,
    "body_content" text,
    "state" text,
    "created_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "backup_id" text
);


alter table "public"."hubspot_page_backups" enable row level security;

create table "public"."platforms" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "updated_at" timestamp without time zone,
    "name" text
);


alter table "public"."platforms" enable row level security;

create table "public"."profiles" (
    "id" uuid not null,
    "email" text,
    "full_name" text,
    "avatar_url" text,
    "created_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "updated_at" timestamp with time zone not null default timezone('utc'::text, now()),
    "stripe_customer_id" text,
    "subscription_status" text,
    "subscription_plan" text,
    "subscription_ends_at" timestamp with time zone
);


alter table "public"."profiles" enable row level security;

create table "public"."smoos_logs" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid not null,
    "action_type" text not null,
    "resource_type" text not null,
    "resource_id" text,
    "details" jsonb,
    "ip_address" inet,
    "user_agent" text,
    "created_at" timestamp with time zone not null default now()
);


alter table "public"."smoos_logs" enable row level security;

create table "public"."sync_sessions" (
    "id" text not null,
    "user_id" text,
    "sheet_id" text,
    "tab_name" text,
    "content_type" text,
    "filters_used" jsonb,
    "rows_synced" bigint,
    "timestamp" timestamp with time zone,
    "created_at" timestamp with time zone,
    "pages_synced" text,
    "sync_type" text,
    "field_count" text,
    "validation_errors" text,
    "is_premium_feature" boolean
);


alter table "public"."sync_sessions" enable row level security;

create table "public"."user_integrations" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "user_id" bigint not null,
    "platform_id" bigint not null,
    "access_token" text,
    "refresh_token" text,
    "expires_at" timestamp without time zone,
    "updated_at" timestamp without time zone
);


alter table "public"."user_integrations" enable row level security;

create table "public"."user_profiles" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "onboarded" boolean default false,
    "email" text,
    "updated_at" timestamp without time zone,
    "theme_preference" smallint default '0'::smallint
);


alter table "public"."user_profiles" enable row level security;

create table "public"."user_settings" (
    "id" uuid not null default gen_random_uuid(),
    "user_id" uuid not null,
    "backup_sheet_id" text,
    "backup_frequency" text default 'daily'::text,
    "auto_backup_enabled" boolean default true,
    "selected_fields" jsonb,
    "sheet_formatting_preferences" jsonb,
    "is_premium" boolean default false,
    "premium_expires_at" timestamp with time zone,
    "created_at" timestamp with time zone default now(),
    "updated_at" timestamp with time zone default now(),
    "google_refresh_token" text,
    "google_access_token" text,
    "google_token_expires_at" timestamp with time zone,
    "backup_schedule" jsonb default '{}'::jsonb,
    "hubspot_connection_type" text default 'paid'::text,
    "website_domain" text,
    "hubspot_token_encrypted" text,
    "selected_sheet_id" text,
    "subscription_id" text,
    "subscription_status" text,
    "notification_preferences" jsonb default '{"email": true, "backup_failure": true, "backup_success": true}'::jsonb,
    "team_role" text default 'owner'::text,
    "organization_id" uuid,
    "revert_log_sheet_id" text,
    "theme" text default 'system'::text,
    "company_name" text,
    "company_address" text,
    "hubspot_portal_id" text,
    "hubspot_access_token" text,
    "hubspot_refresh_token" text,
    "hubspot_token_expires_at" text
);


alter table "public"."user_settings" enable row level security;

create table "public"."validation_rules" (
    "id" text not null,
    "field_name" text,
    "rule_type" text,
    "rule_value" text,
    "error_message" text,
    "is_active" boolean,
    "created_at" timestamp with time zone
);


alter table "public"."validation_rules" enable row level security;

CREATE UNIQUE INDEX audit_logs_pkey ON public.audit_logs USING btree (id);

CREATE UNIQUE INDEX field_configurations_rows_pkey ON public.field_configurations USING btree (id);

CREATE UNIQUE INDEX hubspot_page_backups_pkey ON public.hubspot_page_backups USING btree (id);

CREATE INDEX idx_user_settings_organization_id ON public.user_settings USING btree (organization_id);

CREATE INDEX idx_user_settings_subscription_status ON public.user_settings USING btree (subscription_status);

CREATE INDEX idx_user_settings_user_id ON public.user_settings USING btree (user_id);

CREATE UNIQUE INDEX platform_pkey ON public.platforms USING btree (id);

CREATE UNIQUE INDEX profiles_pkey ON public.profiles USING btree (id);

CREATE UNIQUE INDEX smoos_logs_pkey ON public.smoos_logs USING btree (id);

CREATE UNIQUE INDEX sync_sessions_pkey ON public.sync_sessions USING btree (id);

CREATE UNIQUE INDEX unique_user_id ON public.user_settings USING btree (user_id);

CREATE UNIQUE INDEX user_integrations_pkey ON public.user_integrations USING btree (id);

CREATE UNIQUE INDEX user_settings_pkey ON public.user_settings USING btree (id);

CREATE UNIQUE INDEX users_pkey ON public.user_profiles USING btree (id);

CREATE UNIQUE INDEX validation_rules_pkey ON public.validation_rules USING btree (id);

alter table "public"."audit_logs" add constraint "audit_logs_pkey" PRIMARY KEY using index "audit_logs_pkey";

alter table "public"."field_configurations" add constraint "field_configurations_rows_pkey" PRIMARY KEY using index "field_configurations_rows_pkey";

alter table "public"."hubspot_page_backups" add constraint "hubspot_page_backups_pkey" PRIMARY KEY using index "hubspot_page_backups_pkey";

alter table "public"."platforms" add constraint "platform_pkey" PRIMARY KEY using index "platform_pkey";

alter table "public"."profiles" add constraint "profiles_pkey" PRIMARY KEY using index "profiles_pkey";

alter table "public"."smoos_logs" add constraint "smoos_logs_pkey" PRIMARY KEY using index "smoos_logs_pkey";

alter table "public"."sync_sessions" add constraint "sync_sessions_pkey" PRIMARY KEY using index "sync_sessions_pkey";

alter table "public"."user_integrations" add constraint "user_integrations_pkey" PRIMARY KEY using index "user_integrations_pkey";

alter table "public"."user_profiles" add constraint "users_pkey" PRIMARY KEY using index "users_pkey";

alter table "public"."user_settings" add constraint "user_settings_pkey" PRIMARY KEY using index "user_settings_pkey";

alter table "public"."validation_rules" add constraint "validation_rules_pkey" PRIMARY KEY using index "validation_rules_pkey";

alter table "public"."hubspot_page_backups" add constraint "hubspot_page_backups_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."hubspot_page_backups" validate constraint "hubspot_page_backups_user_id_fkey";

alter table "public"."profiles" add constraint "profiles_id_fkey" FOREIGN KEY (id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."profiles" validate constraint "profiles_id_fkey";

alter table "public"."smoos_logs" add constraint "smoos_logs_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."smoos_logs" validate constraint "smoos_logs_user_id_fkey";

alter table "public"."user_integrations" add constraint "user_integrations_platform_id_fkey" FOREIGN KEY (platform_id) REFERENCES platforms(id) not valid;

alter table "public"."user_integrations" validate constraint "user_integrations_platform_id_fkey";

alter table "public"."user_integrations" add constraint "user_integrations_user_id_fkey" FOREIGN KEY (user_id) REFERENCES user_profiles(id) not valid;

alter table "public"."user_integrations" validate constraint "user_integrations_user_id_fkey";

alter table "public"."user_settings" add constraint "unique_user_id" UNIQUE using index "unique_user_id";

alter table "public"."user_settings" add constraint "user_settings_team_role_check" CHECK ((team_role = ANY (ARRAY['owner'::text, 'admin'::text, 'member'::text, 'viewer'::text]))) not valid;

alter table "public"."user_settings" validate constraint "user_settings_team_role_check";

alter table "public"."user_settings" add constraint "user_settings_user_id_fkey" FOREIGN KEY (user_id) REFERENCES auth.users(id) ON DELETE CASCADE not valid;

alter table "public"."user_settings" validate constraint "user_settings_user_id_fkey";

set check_function_bodies = off;

CREATE OR REPLACE FUNCTION public.update_updated_at_column()
 RETURNS trigger
 LANGUAGE plpgsql
AS $function$
BEGIN
  NEW.updated_at = now();
  RETURN NEW;
END;
$function$
;

grant delete on table "public"."audit_logs" to "anon";

grant insert on table "public"."audit_logs" to "anon";

grant references on table "public"."audit_logs" to "anon";

grant select on table "public"."audit_logs" to "anon";

grant trigger on table "public"."audit_logs" to "anon";

grant truncate on table "public"."audit_logs" to "anon";

grant update on table "public"."audit_logs" to "anon";

grant delete on table "public"."audit_logs" to "authenticated";

grant insert on table "public"."audit_logs" to "authenticated";

grant references on table "public"."audit_logs" to "authenticated";

grant select on table "public"."audit_logs" to "authenticated";

grant trigger on table "public"."audit_logs" to "authenticated";

grant truncate on table "public"."audit_logs" to "authenticated";

grant update on table "public"."audit_logs" to "authenticated";

grant delete on table "public"."audit_logs" to "service_role";

grant insert on table "public"."audit_logs" to "service_role";

grant references on table "public"."audit_logs" to "service_role";

grant select on table "public"."audit_logs" to "service_role";

grant trigger on table "public"."audit_logs" to "service_role";

grant truncate on table "public"."audit_logs" to "service_role";

grant update on table "public"."audit_logs" to "service_role";

grant delete on table "public"."field_configurations" to "anon";

grant insert on table "public"."field_configurations" to "anon";

grant references on table "public"."field_configurations" to "anon";

grant select on table "public"."field_configurations" to "anon";

grant trigger on table "public"."field_configurations" to "anon";

grant truncate on table "public"."field_configurations" to "anon";

grant update on table "public"."field_configurations" to "anon";

grant delete on table "public"."field_configurations" to "authenticated";

grant insert on table "public"."field_configurations" to "authenticated";

grant references on table "public"."field_configurations" to "authenticated";

grant select on table "public"."field_configurations" to "authenticated";

grant trigger on table "public"."field_configurations" to "authenticated";

grant truncate on table "public"."field_configurations" to "authenticated";

grant update on table "public"."field_configurations" to "authenticated";

grant delete on table "public"."field_configurations" to "service_role";

grant insert on table "public"."field_configurations" to "service_role";

grant references on table "public"."field_configurations" to "service_role";

grant select on table "public"."field_configurations" to "service_role";

grant trigger on table "public"."field_configurations" to "service_role";

grant truncate on table "public"."field_configurations" to "service_role";

grant update on table "public"."field_configurations" to "service_role";

grant delete on table "public"."hubspot_page_backups" to "anon";

grant insert on table "public"."hubspot_page_backups" to "anon";

grant references on table "public"."hubspot_page_backups" to "anon";

grant select on table "public"."hubspot_page_backups" to "anon";

grant trigger on table "public"."hubspot_page_backups" to "anon";

grant truncate on table "public"."hubspot_page_backups" to "anon";

grant update on table "public"."hubspot_page_backups" to "anon";

grant delete on table "public"."hubspot_page_backups" to "authenticated";

grant insert on table "public"."hubspot_page_backups" to "authenticated";

grant references on table "public"."hubspot_page_backups" to "authenticated";

grant select on table "public"."hubspot_page_backups" to "authenticated";

grant trigger on table "public"."hubspot_page_backups" to "authenticated";

grant truncate on table "public"."hubspot_page_backups" to "authenticated";

grant update on table "public"."hubspot_page_backups" to "authenticated";

grant delete on table "public"."hubspot_page_backups" to "service_role";

grant insert on table "public"."hubspot_page_backups" to "service_role";

grant references on table "public"."hubspot_page_backups" to "service_role";

grant select on table "public"."hubspot_page_backups" to "service_role";

grant trigger on table "public"."hubspot_page_backups" to "service_role";

grant truncate on table "public"."hubspot_page_backups" to "service_role";

grant update on table "public"."hubspot_page_backups" to "service_role";

grant delete on table "public"."platforms" to "anon";

grant insert on table "public"."platforms" to "anon";

grant references on table "public"."platforms" to "anon";

grant select on table "public"."platforms" to "anon";

grant trigger on table "public"."platforms" to "anon";

grant truncate on table "public"."platforms" to "anon";

grant update on table "public"."platforms" to "anon";

grant delete on table "public"."platforms" to "authenticated";

grant insert on table "public"."platforms" to "authenticated";

grant references on table "public"."platforms" to "authenticated";

grant select on table "public"."platforms" to "authenticated";

grant trigger on table "public"."platforms" to "authenticated";

grant truncate on table "public"."platforms" to "authenticated";

grant update on table "public"."platforms" to "authenticated";

grant delete on table "public"."platforms" to "service_role";

grant insert on table "public"."platforms" to "service_role";

grant references on table "public"."platforms" to "service_role";

grant select on table "public"."platforms" to "service_role";

grant trigger on table "public"."platforms" to "service_role";

grant truncate on table "public"."platforms" to "service_role";

grant update on table "public"."platforms" to "service_role";

grant delete on table "public"."profiles" to "anon";

grant insert on table "public"."profiles" to "anon";

grant references on table "public"."profiles" to "anon";

grant select on table "public"."profiles" to "anon";

grant trigger on table "public"."profiles" to "anon";

grant truncate on table "public"."profiles" to "anon";

grant update on table "public"."profiles" to "anon";

grant delete on table "public"."profiles" to "authenticated";

grant insert on table "public"."profiles" to "authenticated";

grant references on table "public"."profiles" to "authenticated";

grant select on table "public"."profiles" to "authenticated";

grant trigger on table "public"."profiles" to "authenticated";

grant truncate on table "public"."profiles" to "authenticated";

grant update on table "public"."profiles" to "authenticated";

grant delete on table "public"."profiles" to "service_role";

grant insert on table "public"."profiles" to "service_role";

grant references on table "public"."profiles" to "service_role";

grant select on table "public"."profiles" to "service_role";

grant trigger on table "public"."profiles" to "service_role";

grant truncate on table "public"."profiles" to "service_role";

grant update on table "public"."profiles" to "service_role";

grant delete on table "public"."smoos_logs" to "anon";

grant insert on table "public"."smoos_logs" to "anon";

grant references on table "public"."smoos_logs" to "anon";

grant select on table "public"."smoos_logs" to "anon";

grant trigger on table "public"."smoos_logs" to "anon";

grant truncate on table "public"."smoos_logs" to "anon";

grant update on table "public"."smoos_logs" to "anon";

grant delete on table "public"."smoos_logs" to "authenticated";

grant insert on table "public"."smoos_logs" to "authenticated";

grant references on table "public"."smoos_logs" to "authenticated";

grant select on table "public"."smoos_logs" to "authenticated";

grant trigger on table "public"."smoos_logs" to "authenticated";

grant truncate on table "public"."smoos_logs" to "authenticated";

grant update on table "public"."smoos_logs" to "authenticated";

grant delete on table "public"."smoos_logs" to "service_role";

grant insert on table "public"."smoos_logs" to "service_role";

grant references on table "public"."smoos_logs" to "service_role";

grant select on table "public"."smoos_logs" to "service_role";

grant trigger on table "public"."smoos_logs" to "service_role";

grant truncate on table "public"."smoos_logs" to "service_role";

grant update on table "public"."smoos_logs" to "service_role";

grant delete on table "public"."sync_sessions" to "anon";

grant insert on table "public"."sync_sessions" to "anon";

grant references on table "public"."sync_sessions" to "anon";

grant select on table "public"."sync_sessions" to "anon";

grant trigger on table "public"."sync_sessions" to "anon";

grant truncate on table "public"."sync_sessions" to "anon";

grant update on table "public"."sync_sessions" to "anon";

grant delete on table "public"."sync_sessions" to "authenticated";

grant insert on table "public"."sync_sessions" to "authenticated";

grant references on table "public"."sync_sessions" to "authenticated";

grant select on table "public"."sync_sessions" to "authenticated";

grant trigger on table "public"."sync_sessions" to "authenticated";

grant truncate on table "public"."sync_sessions" to "authenticated";

grant update on table "public"."sync_sessions" to "authenticated";

grant delete on table "public"."sync_sessions" to "service_role";

grant insert on table "public"."sync_sessions" to "service_role";

grant references on table "public"."sync_sessions" to "service_role";

grant select on table "public"."sync_sessions" to "service_role";

grant trigger on table "public"."sync_sessions" to "service_role";

grant truncate on table "public"."sync_sessions" to "service_role";

grant update on table "public"."sync_sessions" to "service_role";

grant delete on table "public"."user_integrations" to "anon";

grant insert on table "public"."user_integrations" to "anon";

grant references on table "public"."user_integrations" to "anon";

grant select on table "public"."user_integrations" to "anon";

grant trigger on table "public"."user_integrations" to "anon";

grant truncate on table "public"."user_integrations" to "anon";

grant update on table "public"."user_integrations" to "anon";

grant delete on table "public"."user_integrations" to "authenticated";

grant insert on table "public"."user_integrations" to "authenticated";

grant references on table "public"."user_integrations" to "authenticated";

grant select on table "public"."user_integrations" to "authenticated";

grant trigger on table "public"."user_integrations" to "authenticated";

grant truncate on table "public"."user_integrations" to "authenticated";

grant update on table "public"."user_integrations" to "authenticated";

grant delete on table "public"."user_integrations" to "service_role";

grant insert on table "public"."user_integrations" to "service_role";

grant references on table "public"."user_integrations" to "service_role";

grant select on table "public"."user_integrations" to "service_role";

grant trigger on table "public"."user_integrations" to "service_role";

grant truncate on table "public"."user_integrations" to "service_role";

grant update on table "public"."user_integrations" to "service_role";

grant delete on table "public"."user_profiles" to "anon";

grant insert on table "public"."user_profiles" to "anon";

grant references on table "public"."user_profiles" to "anon";

grant select on table "public"."user_profiles" to "anon";

grant trigger on table "public"."user_profiles" to "anon";

grant truncate on table "public"."user_profiles" to "anon";

grant update on table "public"."user_profiles" to "anon";

grant delete on table "public"."user_profiles" to "authenticated";

grant insert on table "public"."user_profiles" to "authenticated";

grant references on table "public"."user_profiles" to "authenticated";

grant select on table "public"."user_profiles" to "authenticated";

grant trigger on table "public"."user_profiles" to "authenticated";

grant truncate on table "public"."user_profiles" to "authenticated";

grant update on table "public"."user_profiles" to "authenticated";

grant delete on table "public"."user_profiles" to "service_role";

grant insert on table "public"."user_profiles" to "service_role";

grant references on table "public"."user_profiles" to "service_role";

grant select on table "public"."user_profiles" to "service_role";

grant trigger on table "public"."user_profiles" to "service_role";

grant truncate on table "public"."user_profiles" to "service_role";

grant update on table "public"."user_profiles" to "service_role";

grant delete on table "public"."user_settings" to "anon";

grant insert on table "public"."user_settings" to "anon";

grant references on table "public"."user_settings" to "anon";

grant select on table "public"."user_settings" to "anon";

grant trigger on table "public"."user_settings" to "anon";

grant truncate on table "public"."user_settings" to "anon";

grant update on table "public"."user_settings" to "anon";

grant delete on table "public"."user_settings" to "authenticated";

grant insert on table "public"."user_settings" to "authenticated";

grant references on table "public"."user_settings" to "authenticated";

grant select on table "public"."user_settings" to "authenticated";

grant trigger on table "public"."user_settings" to "authenticated";

grant truncate on table "public"."user_settings" to "authenticated";

grant update on table "public"."user_settings" to "authenticated";

grant delete on table "public"."user_settings" to "service_role";

grant insert on table "public"."user_settings" to "service_role";

grant references on table "public"."user_settings" to "service_role";

grant select on table "public"."user_settings" to "service_role";

grant trigger on table "public"."user_settings" to "service_role";

grant truncate on table "public"."user_settings" to "service_role";

grant update on table "public"."user_settings" to "service_role";

grant delete on table "public"."validation_rules" to "anon";

grant insert on table "public"."validation_rules" to "anon";

grant references on table "public"."validation_rules" to "anon";

grant select on table "public"."validation_rules" to "anon";

grant trigger on table "public"."validation_rules" to "anon";

grant truncate on table "public"."validation_rules" to "anon";

grant update on table "public"."validation_rules" to "anon";

grant delete on table "public"."validation_rules" to "authenticated";

grant insert on table "public"."validation_rules" to "authenticated";

grant references on table "public"."validation_rules" to "authenticated";

grant select on table "public"."validation_rules" to "authenticated";

grant trigger on table "public"."validation_rules" to "authenticated";

grant truncate on table "public"."validation_rules" to "authenticated";

grant update on table "public"."validation_rules" to "authenticated";

grant delete on table "public"."validation_rules" to "service_role";

grant insert on table "public"."validation_rules" to "service_role";

grant references on table "public"."validation_rules" to "service_role";

grant select on table "public"."validation_rules" to "service_role";

grant trigger on table "public"."validation_rules" to "service_role";

grant truncate on table "public"."validation_rules" to "service_role";

grant update on table "public"."validation_rules" to "service_role";

create policy "Allow read access to audit logs"
on "public"."audit_logs"
as permissive
for select
to public
using (true);


create policy "Allow read access to field configurations"
on "public"."field_configurations"
as permissive
for select
to public
using (true);


create policy "Users can access their backups"
on "public"."hubspot_page_backups"
as permissive
for all
to public
using ((user_id = auth.uid()));


create policy "Allow read access to platforms"
on "public"."platforms"
as permissive
for select
to public
using (true);


create policy "Users can access their own profile"
on "public"."profiles"
as permissive
for all
to public
using ((auth.uid() = id));


create policy "Users can access their logs"
on "public"."smoos_logs"
as permissive
for all
to public
using ((user_id = auth.uid()));


create policy "Allow read access to sync sessions"
on "public"."sync_sessions"
as permissive
for select
to public
using (true);


create policy "Users can access their integrations"
on "public"."user_integrations"
as permissive
for all
to public
using ((user_id IN ( SELECT user_profiles.id
   FROM user_profiles
  WHERE (user_profiles.email = (auth.uid())::text))));


create policy "Users can access their own profile"
on "public"."user_profiles"
as permissive
for all
to public
using (((auth.uid())::text = email));


create policy "Users can access their settings"
on "public"."user_settings"
as permissive
for all
to public
using ((user_id = auth.uid()));


create policy "Allow read access to validation rules"
on "public"."validation_rules"
as permissive
for select
to public
using (true);


CREATE TRIGGER update_profiles_updated_at BEFORE UPDATE ON public.profiles FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_settings_updated_at BEFORE UPDATE ON public.user_settings FOR EACH ROW EXECUTE FUNCTION update_updated_at_column();
